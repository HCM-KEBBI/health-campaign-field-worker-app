name: fw-app
repository: https://github.com/egovernments/health-campaign-field-worker-app

packages:
  - packages/*
  - apps/*
  - mason_templates/digit_entity/hooks
  - mason_templates/freezed_bloc/hooks

command:
  bootstrap:
    usePubspecOverrides: true
    hooks:
      post: melos generate

scripts:

  generate:
    description: Generate code for all packages.
    run: melos run generate-flutter --no-select && melos run generate-dart --no-select
    exec:
      concurrency: 1

  generate-flutter:
    description: Generate code for all flutter packages.
    run: flutter packages run build_runner build --delete-conflicting-outputs
    exec:
      concurrency: 1
    packageFilters:
      flutter: true
      dependsOn:
        - build_runner

  generate-dart:
    description: Generate code for all packages.
    run: dart run build_runner build --delete-conflicting-outputs
    exec:
      concurrency: 1
    packageFilters:
      dart: true
      flutter: false
      dependsOn:
        - build_runner

  generate-hooks:
    description: Generate hooks for all packages.
    run: dart run build_runner build --delete-conflicting-outputs
    exec:
      concurrency: 1
    packageFilters:
      dependsOn:
        - build_runner
        - mason

  watch:
    description: Watch for changes and generate code.
    run: dart run build_runner watch
    exec:
      concurrency: 1
    packageFilters:
      dependsOn:
          - build_runner

  analyze:
    description: Run `dart analyze` in all packages.
    run: flutter analyze . --no-fatal-infos --no-fatal-warnings
    exec:
      concurrency: 1

  test:
    description: Run Flutter tests for a specific package in this project.
    run: flutter test --no-pub --coverage
    exec:
      concurrency: 1
    packageFilters:
      flutter: true
      dirExists: test

  all-test:
    description: Run all Flutter tests in this project.
    run: melos run test --no-select
    exec:
      concurrency: 1
    packageFilters:
      flutter: true
      dirExists: test

  upgrade-dependencies:
    description: Upgrade all dependencies to their latest major versions.
    run: flutter pub upgrade --major-versions
    exec:
      concurrency: 1
    packageFilters:
      flutter: true


#  test:
#    run: melos exec --dir-exists="test" --fail-fast -- flutter test --no-pub --coverage
#    description: Run Flutter tests for a specific package in this project.
#    packageFilters:
#      flutter: true
#
#  all-test:
#    run: melos run test --no-select
#    description: Run all Flutter tests in this project.
#
#  analyze:
#    run: melos exec -- dart analyze . --no-fatal-infos --no-fatal-warnings
#    description: Run `dart analyze` in all packages.
#
#  combine-coverage:
#    run: melos exec -- "\$MELOS_ROOT_PATH/tools/combine_coverage.sh"
#    description: Combine coverage report of all packages
#
#  generate:coverage-report:
#    run: melos exec -- genhtml \$MELOS_ROOT_PATH/coverage_report/lcov.info -o \$MELOS_ROOT_PATH/coverage_report/html
#    description: Generate a coverage report using lcov.info. Requires genhtml to be installed.
#
#  generate:
#    exec: melos run generate-flutter --no-select && melos run generate-dart --no-select
#    description: Generate code for all packages.
#
#  generate-flutter:
#    exec: dart run build_runner build --delete-conflicting-outputs
#    packageFilters:
#      dependsOn:
#        - build_runner
#
#  generate-dart:
#    run: dart run build_runner build --delete-conflicting-outputs
#    packageFilters:
#      dart: true
#      depends-on:
#        - build_runner
#        - flutter
#
#  watch-flutter:
#    exec: flutter packages run build_runner watch
#    packageFilters:
#      flutter: true
#      depends-on: build_runner
#
#  watch-dart:
#    exec: dart packages run build_runner watch
#    packageFilters:
#      dart: true
#      flutter: false
#      depends-on: build_runner
#
#  open_report:
#    run: melos exec -- melos run generate:coverage-report && open coverage_report/html/index.html
#
#  upgrade-dependencies:
#    description: Upgrade all dependencies to their latest major versions.
#    run: dart pub upgrade --major-versions


